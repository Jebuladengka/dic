#!/usr/bin/env python
#-*- coding: utf-8 -*-

import sys, os, requests 
from bs4 import BeautifulSoup

class Dic:
    def __init__(self, word):
        self.word = word
        self.bs = self.getPage()

    def getPage(self):
        try:
            url = 'http://dict.kekenet.com/en/' + self.word
            r = requests.get(url);
            bs = BeautifulSoup(r.content, 'lxml')
            return bs
        except Exception as e:
            print e

    def phn(self):
        try:
            return self.bs.find('span', class_='phn').string
        except Exception as e:
            print e

    def translate(self):
        try:
            wordm = self.bs.find('div', id='wordm')
            meaning = [x.string for x in wordm.children if x.string]
            return [m for m in meaning]
        except Exception as e:
            print e

    def sentence(self):
        try:
            sentences = self.bs.find('ul', id='s_ul').find_all('div')
            result = []
            for div in sentences:
                div.a.decompose()
                div.br.replace_with('\n')
                result.append(div.get_text())
            return result
        except Exception as e:
            print e

    def printTranslate(self):
        try:
            phn = self.phn()
            meaning = self.translate()
            w = int(os.popen('stty size', 'r').read().split()[1])
            print '+' + '-'*(w-2) + '+'
            print ' '*(w-1)+'|\r| ' + self.word + '  ' + phn
            print '+' + '-'*(w-2) + '+'
            for i in meaning: 
                print ' '*(w-1)+'|\r| '+i
            print '+' + '-'*(w-2) + '+'
        except Exception as e:
            print e

    def printSentence(self):
        try:
            sentences = self.sentence()
            w = int(os.popen('stty size', 'r').read().split()[1])
            print '-'*w
            for s in sentences:
                print ' '+s
                print '-'*w
        except Exception as e:
            print e


if __name__ == '__main__':
    l = len(sys.argv)
    if l < 2:
        while True:
            dic = Dic(raw_input('>>>'))
            dic.printTranslate()
    elif l == 2 and sys.argv[1] == '-h':
        print '''
    dic [word]
        '''
    elif l == 3 and sys.argv[1] == '-l':
        dic = Dic(sys.argv[2])
        dic.printSentence()
    else:
        words = sys.argv[1:]
        for w in words:
            dic = Dic(w)
            dic.printTranslate()
